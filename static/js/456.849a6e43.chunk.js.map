{"version":3,"file":"static/js/456.849a6e43.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@motionone/dom/dist/gestures/resize/handle-element.es.js","../node_modules/@motionone/dom/dist/utils/resolve-elements.es.js","../node_modules/@motionone/dom/dist/gestures/resize/handle-window.es.js","../node_modules/@motionone/utils/dist/is-function.es.js","../node_modules/@motionone/dom/dist/gestures/resize/index.es.js","../node_modules/@motionone/utils/dist/progress.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/info.es.js","../node_modules/@motionone/utils/dist/velocity.es.js","../node_modules/@motionone/utils/dist/noop.es.js","../node_modules/@motionone/utils/dist/mix.es.js","../node_modules/@motionone/utils/dist/offset.es.js","../node_modules/@motionone/utils/dist/is-number.es.js","../node_modules/@motionone/utils/dist/easing.es.js","../node_modules/@motionone/utils/dist/is-easing-list.es.js","../node_modules/@motionone/utils/dist/wrap.es.js","../node_modules/@motionone/utils/dist/clamp.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/offsets/presets.es.js","../node_modules/@motionone/utils/dist/is-string.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/offsets/edge.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/offsets/offset.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/offsets/index.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/offsets/inset.es.js","../node_modules/@motionone/utils/dist/interpolate.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/on-scroll-handler.es.js","../node_modules/@motionone/dom/dist/gestures/scroll/index.es.js","../node_modules/framer-motion/dist/es/value/use-scroll.mjs","motions/scroll.tsx","../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/transform.mjs","../node_modules/framer-motion/dist/es/value/use-combine-values.mjs","../node_modules/framer-motion/dist/es/value/use-on-change.mjs","../node_modules/framer-motion/dist/es/value/use-transform.mjs"],"sourcesContent":["import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { resolveElements } from '../../utils/resolve-elements.es.js';\n\nconst resizeHandlers = new WeakMap();\nlet observer;\nfunction getElementSize(target, borderBoxSize) {\n    if (borderBoxSize) {\n        const { inlineSize, blockSize } = borderBoxSize[0];\n        return { width: inlineSize, height: blockSize };\n    }\n    else if (target instanceof SVGElement && \"getBBox\" in target) {\n        return target.getBBox();\n    }\n    else {\n        return {\n            width: target.offsetWidth,\n            height: target.offsetHeight,\n        };\n    }\n}\nfunction notifyTarget({ target, contentRect, borderBoxSize, }) {\n    var _a;\n    (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => {\n        handler({\n            target,\n            contentSize: contentRect,\n            get size() {\n                return getElementSize(target, borderBoxSize);\n            },\n        });\n    });\n}\nfunction notifyAll(entries) {\n    entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n    if (typeof ResizeObserver === \"undefined\")\n        return;\n    observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n    if (!observer)\n        createResizeObserver();\n    const elements = resolveElements(target);\n    elements.forEach((element) => {\n        let elementHandlers = resizeHandlers.get(element);\n        if (!elementHandlers) {\n            elementHandlers = new Set();\n            resizeHandlers.set(element, elementHandlers);\n        }\n        elementHandlers.add(handler);\n        observer === null || observer === void 0 ? void 0 : observer.observe(element);\n    });\n    return () => {\n        elements.forEach((element) => {\n            const elementHandlers = resizeHandlers.get(element);\n            elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n            if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n                observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n            }\n        });\n    };\n}\n\nexport { resizeElement };\n","function resolveElements(elements, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = document.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = document.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","const windowCallbacks = new Set();\nlet windowResizeHandler;\nfunction createWindowResizeHandler() {\n    windowResizeHandler = () => {\n        const size = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        const info = {\n            target: window,\n            size,\n            contentSize: size,\n        };\n        windowCallbacks.forEach((callback) => callback(info));\n    };\n    window.addEventListener(\"resize\", windowResizeHandler);\n}\nfunction resizeWindow(callback) {\n    windowCallbacks.add(callback);\n    if (!windowResizeHandler)\n        createWindowResizeHandler();\n    return () => {\n        windowCallbacks.delete(callback);\n        if (!windowCallbacks.size && windowResizeHandler) {\n            windowResizeHandler = undefined;\n        }\n    };\n}\n\nexport { resizeWindow };\n","const isFunction = (value) => typeof value === \"function\";\n\nexport { isFunction };\n","import { resizeElement } from './handle-element.es.js';\nimport { resizeWindow } from './handle-window.es.js';\nimport { isFunction } from '@motionone/utils';\n\nfunction resize(a, b) {\n    return isFunction(a) ? resizeWindow(a) : resizeElement(a, b);\n}\n\nexport { resize };\n","const progress = (min, max, value) => max - min === 0 ? 1 : (value - min) / (max - min);\n\nexport { progress };\n","import { progress, velocityPerSecond } from '@motionone/utils';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[\"scroll\" + position];\n    axis.scrollLength = element[\"scroll\" + length] - element[\"client\" + length];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed ? 0 : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nexport { createScrollInfo, updateScrollInfo };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","const noop = () => { };\nconst noopReturn = (v) => v;\n\nexport { noop, noopReturn };\n","const mix = (min, max, progress) => -progress * min + progress * max + min;\n\nexport { mix };\n","import { mix } from './mix.es.js';\nimport { progress } from './progress.es.js';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\nfunction defaultOffset(length) {\n    const offset = [0];\n    fillOffset(offset, length - 1);\n    return offset;\n}\n\nexport { defaultOffset, fillOffset };\n","const isNumber = (value) => typeof value === \"number\";\n\nexport { isNumber };\n","import { isEasingList } from './is-easing-list.es.js';\nimport { wrap } from './wrap.es.js';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingList(easing)\n        ? easing[wrap(0, easing.length, i)]\n        : easing;\n}\n\nexport { getEasingForSegment };\n","import { isNumber } from './is-number.es.js';\n\nconst isEasingList = (easing) => Array.isArray(easing) && !isNumber(easing[0]);\n\nexport { isEasingList };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","const ScrollOffset = {\n    Enter: [\n        [0, 1],\n        [1, 1],\n    ],\n    Exit: [\n        [0, 0],\n        [1, 0],\n    ],\n    Any: [\n        [1, 0],\n        [0, 1],\n    ],\n    All: [\n        [0, 0],\n        [1, 1],\n    ],\n};\n\nexport { ScrollOffset };\n","const isString = (value) => typeof value === \"string\";\n\nexport { isString };\n","import { isString, isNumber } from '@motionone/utils';\n\nconst namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (namedEdges[edge] !== undefined) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (isString(edge)) {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (isNumber(edge)) {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n","import { isNumber, isString } from '@motionone/utils';\nimport { resolveEdge, namedEdges } from './edge.es.js';\n\nconst defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if (isNumber(offset)) {\n        /**\n         * If we're provided offset: [0, 0.5, 1] then each number x should become\n         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n         * and container etc.\n         */\n        offsetDefinition = [offset, offset];\n    }\n    else if (isString(offset)) {\n        offset = offset.trim();\n        if (offset.includes(\" \")) {\n            offsetDefinition = offset.split(\" \");\n        }\n        else {\n            /**\n             * If we're provided a definition like \"100px\" then we want to apply\n             * that only to the top of the target point, leaving the container at 0.\n             * Whereas a named offset like \"end\" should be applied to both.\n             */\n            offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];\n        }\n    }\n    targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n}\n\nexport { resolveOffset };\n","import { interpolate, defaultOffset } from '@motionone/utils';\nimport { calcInset } from './inset.es.js';\nimport { ScrollOffset } from './presets.es.js';\nimport { resolveOffset } from './offset.es.js';\n\nconst point = { x: 0, y: 0 };\nfunction resolveOffsets(container, info, options) {\n    let { offset: offsetDefinition = ScrollOffset.All } = options;\n    const { target = container, axis = \"y\" } = options;\n    const lengthLabel = axis === \"y\" ? \"height\" : \"width\";\n    const inset = target !== container ? calcInset(target, container) : point;\n    /**\n     * Measure the target and container. If they're the same thing then we\n     * use the container's scrollWidth/Height as the target, from there\n     * all other calculations can remain the same.\n     */\n    const targetSize = target === container\n        ? { width: container.scrollWidth, height: container.scrollHeight }\n        : { width: target.clientWidth, height: target.clientHeight };\n    const containerSize = {\n        width: container.clientWidth,\n        height: container.clientHeight,\n    };\n    /**\n     * Reset the length of the resolved offset array rather than creating a new one.\n     * TODO: More reusable data structures for targetSize/containerSize would also be good.\n     */\n    info[axis].offset.length = 0;\n    /**\n     * Populate the offset array by resolving the user's offset definition into\n     * a list of pixel scroll offets.\n     */\n    let hasChanged = !info[axis].interpolate;\n    const numOffsets = offsetDefinition.length;\n    for (let i = 0; i < numOffsets; i++) {\n        const offset = resolveOffset(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);\n        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {\n            hasChanged = true;\n        }\n        info[axis].offset[i] = offset;\n    }\n    /**\n     * If the pixel scroll offsets have changed, create a new interpolator function\n     * to map scroll value into a progress.\n     */\n    if (hasChanged) {\n        info[axis].interpolate = interpolate(defaultOffset(numOffsets), info[axis].offset);\n        info[axis].interpolatorOffsets = [...info[axis].offset];\n    }\n    info[axis].progress = info[axis].interpolate(info[axis].current);\n}\n\nexport { resolveOffsets };\n","function calcInset(element, container) {\n    let inset = { x: 0, y: 0 };\n    let current = element;\n    while (current && current !== container) {\n        if (current instanceof HTMLElement) {\n            inset.x += current.offsetLeft;\n            inset.y += current.offsetTop;\n            current = current.offsetParent;\n        }\n        else if (current instanceof SVGGraphicsElement && \"getBBox\" in current) {\n            const { top, left } = current.getBBox();\n            inset.x += left;\n            inset.y += top;\n            /**\n             * Assign the next parent element as the <svg /> tag.\n             */\n            while (current && current.tagName !== \"svg\") {\n                current = current.parentNode;\n            }\n        }\n    }\n    return inset;\n}\n\nexport { calcInset };\n","import { mix } from './mix.es.js';\nimport { noopReturn } from './noop.es.js';\nimport { fillOffset, defaultOffset } from './offset.es.js';\nimport { progress } from './progress.es.js';\nimport { getEasingForSegment } from './easing.es.js';\nimport { clamp } from './clamp.es.js';\n\nfunction interpolate(output, input = defaultOffset(output.length), easing = noopReturn) {\n    const length = output.length;\n    /**\n     * If the input length is lower than the output we\n     * fill the input to match. This currently assumes the input\n     * is an animation progress value so is a good candidate for\n     * moving outside the function.\n     */\n    const remainder = length - input.length;\n    remainder > 0 && fillOffset(input, remainder);\n    return (t) => {\n        let i = 0;\n        for (; i < length - 2; i++) {\n            if (t < input[i + 1])\n                break;\n        }\n        let progressInRange = clamp(0, 1, progress(input[i], input[i + 1], t));\n        const segmentEasing = getEasingForSegment(easing, i);\n        progressInRange = segmentEasing(progressInRange);\n        return mix(output[i], output[i + 1], progressInRange);\n    };\n}\n\nexport { interpolate };\n","import { isFunction, noopReturn } from '@motionone/utils';\nimport { updateScrollInfo } from './info.es.js';\nimport { resolveOffsets } from './offsets/index.es.js';\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node != container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n}\nfunction createOnScrollHandler(element, onScroll, info, options = {}) {\n    const axis = options.axis || \"y\";\n    return {\n        measure: () => measure(element, options.target, info),\n        update: (time) => {\n            updateScrollInfo(element, info, time);\n            if (options.offset || options.target) {\n                resolveOffsets(element, info, options);\n            }\n        },\n        notify: isFunction(onScroll)\n            ? () => onScroll(info)\n            : scrubAnimation(onScroll, info[axis]),\n    };\n}\nfunction scrubAnimation(controls, axisInfo) {\n    controls.pause();\n    controls.forEachNative((animation, { easing }) => {\n        var _a, _b;\n        if (animation.updateDuration) {\n            if (!easing)\n                animation.easing = noopReturn;\n            animation.updateDuration(1);\n        }\n        else {\n            const timingOptions = { duration: 1000 };\n            if (!easing)\n                timingOptions.easing = \"linear\";\n            (_b = (_a = animation.effect) === null || _a === void 0 ? void 0 : _a.updateTiming) === null || _b === void 0 ? void 0 : _b.call(_a, timingOptions);\n        }\n    });\n    return () => {\n        controls.currentTime = axisInfo.progress;\n    };\n}\n\nexport { createOnScrollHandler };\n","import { __rest } from 'tslib';\nimport { resize } from '../resize/index.es.js';\nimport { createScrollInfo } from './info.es.js';\nimport { createOnScrollHandler } from './on-scroll-handler.es.js';\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.documentElement ? window : element;\nfunction scroll(onScroll, _a = {}) {\n    var { container = document.documentElement } = _a, options = __rest(_a, [\"container\"]);\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info = createScrollInfo();\n    const containerHandler = createOnScrollHandler(container, onScroll, info, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const listener = () => {\n            const time = performance.now();\n            for (const handler of containerHandlers)\n                handler.measure();\n            for (const handler of containerHandlers)\n                handler.update(time);\n            for (const handler of containerHandlers)\n                handler.notify();\n        };\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n    }\n    const listener = scrollListeners.get(container);\n    const onLoadProcesss = requestAnimationFrame(listener);\n    return () => {\n        var _a;\n        if (typeof onScroll !== \"function\")\n            onScroll.stop();\n        cancelAnimationFrame(onLoadProcesss);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const containerHandlers = onScrollHandlers.get(container);\n        if (!containerHandlers)\n            return;\n        containerHandlers.delete(containerHandler);\n        if (containerHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const listener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (listener) {\n            getEventTarget(container).removeEventListener(\"scroll\", listener);\n            (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();\n            window.removeEventListener(\"resize\", listener);\n        }\n    };\n}\n\nexport { scroll };\n","import { __rest, __assign } from 'tslib';\nimport { scroll } from '@motionone/dom';\nimport { motionValue } from './index.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nvar createScrollMotionValues = function () { return ({\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0),\n}); };\nfunction useScroll(_a) {\n    if (_a === void 0) { _a = {}; }\n    var container = _a.container, target = _a.target, options = __rest(_a, [\"container\", \"target\"]);\n    var values = useConstant(createScrollMotionValues);\n    useIsomorphicLayoutEffect(function () {\n        return scroll(function (_a) {\n            var x = _a.x, y = _a.y;\n            values.scrollX.set(x.current);\n            values.scrollXProgress.set(x.progress);\n            values.scrollY.set(y.current);\n            values.scrollYProgress.set(y.progress);\n        }, __assign(__assign({}, options), { container: (container === null || container === void 0 ? void 0 : container.current) || undefined, target: (target === null || target === void 0 ? void 0 : target.current) || undefined }));\n    }, []);\n    return values;\n}\n\nexport { useScroll };\n","import styled from \"styled-components\";\r\nimport { motion, useMotionValue, useTransform, useScroll } from \"framer-motion\";\r\n\r\nconst Wrapper = styled(motion.div)`\r\n  height: 200vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Box = styled(motion.div)`\r\n  width: 200px;\r\n  height: 200px;\r\n  background-color: rgba(255, 255, 255, 1);\r\n  border-radius: 40px;\r\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\r\n`;\r\n\r\nconst Scroll = () => {\r\n  const x = useMotionValue(0);\r\n  const rotateZ = useTransform(x, [-800, 800], [-360, 360]);\r\n  const gradient = useTransform(\r\n    x,\r\n    [-800, 800],\r\n    [\r\n      \"linear-gradient(135deg, rgb(0, 210, 238), rgb(0, 83, 238))\",\r\n      \"linear-gradient(135deg, rgb(0, 238, 155), rgb(238, 178, 0))\",\r\n    ]\r\n  );\r\n  const { scrollYProgress } = useScroll();\r\n  const scale = useTransform(scrollYProgress, [0, 1], [1, 5]);\r\n\r\n  return (\r\n    <Wrapper style={{ background: gradient }}>\r\n      <Box style={{ x, rotateZ, scale }} drag=\"x\" dragSnapToOrigin />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import { __read } from 'tslib';\nimport { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    var value = useConstant(function () { return motionValue(initial); });\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    var isStatic = useContext(MotionConfigContext).isStatic;\n    if (isStatic) {\n        var _a = __read(useState(initial), 2), setLatest_1 = _a[1];\n        useEffect(function () { return value.onChange(setLatest_1); }, []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { __assign } from 'tslib';\nimport { interpolate } from 'popmotion';\n\nvar isCustomValueType = function (v) {\n    return typeof v === \"object\" && v.mix;\n};\nvar getMixer = function (v) { return (isCustomValueType(v) ? v.mix : undefined); };\nfunction transform() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var useImmediate = !Array.isArray(args[0]);\n    var argOffset = useImmediate ? 0 : -1;\n    var inputValue = args[0 + argOffset];\n    var inputRange = args[1 + argOffset];\n    var outputRange = args[2 + argOffset];\n    var options = args[3 + argOffset];\n    var interpolator = interpolate(inputRange, outputRange, __assign({ mixer: getMixer(outputRange[0]) }, options));\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { useMultiOnChange } from './use-on-change.mjs';\nimport sync from 'framesync';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    var value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    var updateValue = function () { return value.set(combineValues()); };\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useMultiOnChange(values, function () { return sync.update(updateValue, false, true); });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction useOnChange(value, callback) {\n    useIsomorphicLayoutEffect(function () {\n        if (isMotionValue(value))\n            return value.onChange(callback);\n    }, [callback]);\n}\nfunction useMultiOnChange(values, handler) {\n    useIsomorphicLayoutEffect(function () {\n        var subscriptions = values.map(function (value) { return value.onChange(handler); });\n        return function () { return subscriptions.forEach(function (unsubscribe) { return unsubscribe(); }); };\n    });\n}\n\nexport { useMultiOnChange, useOnChange };\n","import { __read } from 'tslib';\nimport { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    var transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], function (_a) {\n            var _b = __read(_a, 1), latest = _b[0];\n            return transformer(latest);\n        });\n}\nfunction useListTransform(values, transformer) {\n    var latest = useConstant(function () { return []; });\n    return useCombineMotionValues(values, function () {\n        latest.length = 0;\n        var numValues = values.length;\n        for (var i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","observer","resizeHandlers","WeakMap","notifyTarget","_a","target","contentRect","borderBoxSize","get","forEach","handler","contentSize","size","width","inlineSize","height","blockSize","SVGElement","getBBox","offsetWidth","offsetHeight","getElementSize","notifyAll","entries","resizeElement","ResizeObserver","elements","selectorCache","document","querySelectorAll","Element","from","resolveElements","element","elementHandlers","Set","set","add","observe","delete","unobserve","windowResizeHandler","windowCallbacks","resizeWindow","callback","window","innerWidth","innerHeight","info","addEventListener","undefined","isFunction","resize","a","b","progress","min","max","keys","x","position","y","updateAxisInfo","axisName","time","axis","prev","current","prevTime","scrollLength","offset","velocity","frameDuration","elapsed","updateScrollInfo","noopReturn","v","mix","fillOffset","remaining","offsetProgress","push","defaultOffset","isNumber","getEasingForSegment","easing","isEasingList","rangeSize","wrap","clamp","Math","ScrollOffset","Enter","Exit","Any","All","isString","namedEdges","start","center","end","resolveEdge","edge","inset","delta","asNumber","parseFloat","endsWith","documentElement","clientWidth","clientHeight","resolveOffset","containerLength","targetLength","targetInset","offsetDefinition","trim","includes","split","point","resolveOffsets","container","options","lengthLabel","HTMLElement","offsetLeft","offsetTop","offsetParent","SVGGraphicsElement","top","left","tagName","parentNode","calcInset","targetSize","scrollWidth","scrollHeight","containerSize","hasChanged","interpolate","numOffsets","interpolatorOffsets","output","input","remainder","t","progressInRange","segmentEasing","measure","targetOffset","node","createOnScrollHandler","onScroll","update","notify","scrubAnimation","controls","axisInfo","pause","forEachNative","animation","_b","updateDuration","timingOptions","duration","effect","updateTiming","currentTime","scrollListeners","resizeListeners","onScrollHandlers","getEventTarget","createScrollMotionValues","scrollX","motionValue","scrollY","scrollXProgress","scrollYProgress","useScroll","__rest","values","useConstant","useIsomorphicLayoutEffect","containerHandlers","containerHandler","has","listener","performance","now","passive","onLoadProcesss","requestAnimationFrame","stop","cancelAnimationFrame","removeEventListener","scroll","__assign","Wrapper","styled","motion","Box","useMotionValue","rotateZ","useTransform","gradient","scale","style","background","drag","dragSnapToOrigin","initial","useContext","MotionConfigContext","isStatic","setLatest_1","__read","useState","useEffect","onChange","getMixer","isCustomValueType","useCombineMotionValues","combineValues","updateValue","subscriptions","map","unsubscribe","useMultiOnChange","sync","inputRangeOrTransformer","outputRange","transformer","args","_i","arguments","useImmediate","argOffset","inputValue","inputRange","interpolator","mixer","transform","useListTransform","latest","numValues"],"sourceRoot":""}